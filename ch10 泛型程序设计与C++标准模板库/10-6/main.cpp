#include<iostream>
#include<vector>
#include<deque>
#include<algorithm>
#include<iterator>
#include<string>
#include<list>
using namespace std;

int main()
{
	string name1[] = { "Alice","Helen","Lucy","Susan" };
	string name2[] = { "Bob","David","Levin","Mike" };

	list<string> s1(name1, name1 + 4);
	list<string> s2(name2, name2 + 4);

	//将s1的第一个元素放到s2的最后

	//等价于s2.splice(s2.end(), s1, s1.begin(),++s1.begin());

	s2.splice(s2.end(), s1, s1.begin()); //s2.end()指向s2最后元素的后一个

	list<string>::iterator iter1 = s1.begin();//iter1指向s1首

	advance(iter1, 2);//iter1前进2个元素，它将指向s1第3个元素

	list<string>::iterator iter2 = s2.begin();//iter2指向s2首

	++iter2;//iter2前进1个元素，它将指向s2第2个元素

	list<string>::iterator iter3 = iter2;//用iter2初始化iter3

	advance(iter3, 2);//iter3前进2个元素，它将指向s2的第4个元素

	//将[iter2,iter3)范围内的节点接到s1中iter1指向的节点前

	s1.splice(iter1, s2, iter2, iter3);


	//分别将s1和s2输出
	copy(s1.begin(), s1.end(), ostream_iterator<string>(cout, " "));

	cout << endl;

	copy(s2.begin(), s2.end(), ostream_iterator<string>(cout, " "));

	cout << endl;

	return 0;
}